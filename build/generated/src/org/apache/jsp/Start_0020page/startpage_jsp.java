package org.apache.jsp.Start_0020page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class startpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("\n");
      out.write("<!-- jQuery library -->\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Latest compiled JavaScript -->\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"http://www.marcoguglie.it/Codepen/AnimatedHeaderBg/demo-1/js/EasePack.min.js\"></script>\n");
      out.write("<script src=\"http://www.marcoguglie.it/Codepen/AnimatedHeaderBg/demo-1/js/rAF.js\"></script>\n");
      out.write("<script src=\"http://www.marcoguglie.it/Codepen/AnimatedHeaderBg/demo-1/js/TweenLite.min.js\"></script>\n");
      out.write("<link href='http://fonts.googleapis.com/css?family=Raleway:200,400,800' rel='stylesheet' type='text/css'>\n");
      out.write(" <link rel=\"stylesheet\" type=\"text/css\" href=\"http://fonts.googleapis.com/css?family=Droid Sans\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.9/semantic.min.css\">\n");
      out.write("         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js\"></script>\n");
      out.write("         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.9/semantic.min.js\"></script>\n");
      out.write("\n");
      out.write("        <style>\n");
      out.write("       body {\n");
      out.write("  font: 400 1em/1.5 \"Neuton\";\n");
      out.write("  \n");
      out.write("  color: rgba(255, 255, 255, 0.25);\n");
      out.write("  text-align: center;\n");
      out.write("  margin: 0;\n");
      out.write("  font-size: 38px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("p {\n");
      out.write("  text-transform: uppercase;\n");
      out.write("  letter-spacing: .5em;\n");
      out.write("  display: inline-block;\n");
      out.write("/*  border: 4px double #fff;*/\n");
      out.write("/*  border-width: 4px 0;*/\n");
      out.write("  padding: 1.5em 0em;\n");
      out.write("  position: absolute;\n");
      out.write("  top: 18%;\n");
      out.write("  left: 50%;\n");
      out.write("  width: 40em;\n");
      out.write("  margin: 0 0 0 -20em;\n");
      out.write("}\n");
      out.write("p span {\n");
      out.write("  font: 700 4em/1 \"Oswald\", sans-serif;\n");
      out.write("  letter-spacing: 0;\n");
      out.write("  padding: .25em 0 .325em;\n");
      out.write("  display: block;\n");
      out.write("  margin: 0 auto;\n");
      out.write("  text-shadow: 0 0 80px rgba(255, 255, 255, 0.5);\n");
      out.write("  /* Clip Background Image */\n");
      out.write("  background: url(http://likebangla.tk/demo/animated_text_fill.png) repeat-y;\n");
      out.write("  -webkit-background-clip: text;\n");
      out.write("  /* Animate Background Image */\n");
      out.write("  -webkit-text-fill-color: transparent;\n");
      out.write("  -webkit-animation: aitf 80s linear infinite;\n");
      out.write("  /* Activate hardware acceleration for smoother animations */\n");
      out.write("  -webkit-transform: translate3d(0, 0, 0);\n");
      out.write("  -webkit-backface-visibility: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Animate Background Image */\n");
      out.write("@-webkit-keyframes aitf {\n");
      out.write("  0% {\n");
      out.write("    background-position: 0% 50%;\n");
      out.write("  }\n");
      out.write("  100% {\n");
      out.write("    background-position: 100% 50%;\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("/*background*/\n");
      out.write("/* Header */\n");
      out.write(".large-header {\n");
      out.write("  position: relative;\n");
      out.write("  width: 100%;\n");
      out.write("  background: #333;\n");
      out.write("  overflow: hidden;\n");
      out.write("  background-size: cover;\n");
      out.write("  background-position: center center;\n");
      out.write("  z-index: 1;\n");
      out.write("}\n");
      out.write("#large-header {\n");
      out.write("  background-image: url(\"http://www.marcoguglie.it/Codepen/AnimatedHeaderBg/demo-1/img/demo-1-bg.jpg\");\n");
      out.write("}\n");
      out.write(".main-title {\n");
      out.write("  position: absolute;\n");
      out.write("  margin: 0;\n");
      out.write("  padding: 0;\n");
      out.write("  color: #f9f1e9;\n");
      out.write("  text-align: center;\n");
      out.write("  top: 50%;\n");
      out.write("  left: 50%;\n");
      out.write("  -webkit-transform: translate3d(-50%, -50%, 0);\n");
      out.write("  transform: translate3d(-50%, -50%, 0);\n");
      out.write("}\n");
      out.write(".demo-1 .main-title {\n");
      out.write("  text-transform: uppercase;\n");
      out.write("  font-size: 4.2em;\n");
      out.write("  letter-spacing: 0.1em;\n");
      out.write("}\n");
      out.write(" .css-selector {\n");
      out.write("  font-family: 'Droid Sans', serif;\n");
      out.write("}\n");
      out.write(".main-title .thin {\n");
      out.write("  font-weight: 200;\n");
      out.write("}\n");
      out.write("@media only screen and (max-width: 768px) {\n");
      out.write("  .demo-1 .main-title {\n");
      out.write("    font-size: 3em;\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("       \n");
      out.write("       \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"large-header\" class=\"large-header\">\n");
      out.write("  <canvas id=\"demo-canvas\"></canvas>\n");
      out.write(" \n");
      out.write(" <div class=\"container\">\n");
      out.write("     <div style=\"position: fixed ;top: 500px;left: 530px\">\n");
      out.write("<div class=\"ui massive buttons\"  >\n");
      out.write("                <button class=\"ui inverted blue button\" onclick=\"indexbutton()\">LOGIN</button>\n");
      out.write("           <div class=\"or\"></div>\n");
      out.write("           <button class=\"ui inverted red button\" ><a href=\"login pages/login.jsp\" style=\"text-decoration: none\">JOIN US</a>    </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t     <p>\n");
      out.write("  \n");
      out.write("            <span >\n");
      out.write("                 POWWOW\n");
      out.write("                </span>\n");
      out.write("                \"where knowledge is shared\"\n");
      out.write("            </p>\n");
      out.write("\t</div>\n");
      out.write("     \n");
      out.write("</div>\n");
      out.write("   \n");
      out.write("</div>\n");
      out.write("        \n");
      out.write("         <div class=\"ui basic modal\" >\n");
      out.write("                 <div class=\"ui icon header\">\n");
      out.write("                      <i class=\"add user icon\"></i>\n");
      out.write("                               WHO ARE YOU?\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                 <div >\n");
      out.write("         <a href=\"register pages/studentreg.jsp\"> \n");
      out.write("             <img class=\"ui medium circular image\" src=\"images/stud.png\" align=\"left\"   id=\"img1\" > \n");
      out.write("         </a>\n");
      out.write("         <a href=\"register pages/facultyreg.jsp\"> \n");
      out.write("        <img class=\"ui medium circular image\" src=\"images/fac.png\" align=\"right\"  >\n");
      out.write("        </a>\n");
      out.write("                </div>  \n");
      out.write("\n");
      out.write("   \n");
      out.write("                </div>\n");
      out.write("      \n");
      out.write("<script>\n");
      out.write("    \n");
      out.write("     function indexbutton(){\n");
      out.write("                $('.ui.modal').modal('show');\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("    (function() {\n");
      out.write("\n");
      out.write("    var width, height, largeHeader, canvas, ctx, points, target, animateHeader = true;\n");
      out.write("\n");
      out.write("    // Main\n");
      out.write("    initHeader();\n");
      out.write("    initAnimation();\n");
      out.write("    addListeners();\n");
      out.write("\n");
      out.write("    function initHeader() {\n");
      out.write("        width = window.innerWidth;\n");
      out.write("        height = window.innerHeight;\n");
      out.write("        target = {x: width/2, y: height/2};\n");
      out.write("\n");
      out.write("        largeHeader = document.getElementById('large-header');\n");
      out.write("        largeHeader.style.height = height+'px';\n");
      out.write("\n");
      out.write("        canvas = document.getElementById('demo-canvas');\n");
      out.write("        canvas.width = width;\n");
      out.write("        canvas.height = height;\n");
      out.write("        ctx = canvas.getContext('2d');\n");
      out.write("\n");
      out.write("        // create points\n");
      out.write("        points = [];\n");
      out.write("        for(var x = 0; x < width; x = x + width/20) {\n");
      out.write("            for(var y = 0; y < height; y = y + height/20) {\n");
      out.write("                var px = x + Math.random()*width/20;\n");
      out.write("                var py = y + Math.random()*height/20;\n");
      out.write("                var p = {x: px, originX: px, y: py, originY: py };\n");
      out.write("                points.push(p);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // for each point find the 5 closest points\n");
      out.write("        for(var i = 0; i < points.length; i++) {\n");
      out.write("            var closest = [];\n");
      out.write("            var p1 = points[i];\n");
      out.write("            for(var j = 0; j < points.length; j++) {\n");
      out.write("                var p2 = points[j]\n");
      out.write("                if(!(p1 == p2)) {\n");
      out.write("                    var placed = false;\n");
      out.write("                    for(var k = 0; k < 5; k++) {\n");
      out.write("                        if(!placed) {\n");
      out.write("                            if(closest[k] == undefined) {\n");
      out.write("                                closest[k] = p2;\n");
      out.write("                                placed = true;\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    for(var k = 0; k < 5; k++) {\n");
      out.write("                        if(!placed) {\n");
      out.write("                            if(getDistance(p1, p2) < getDistance(p1, closest[k])) {\n");
      out.write("                                closest[k] = p2;\n");
      out.write("                                placed = true;\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            p1.closest = closest;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // assign a circle to each point\n");
      out.write("        for(var i in points) {\n");
      out.write("            var c = new Circle(points[i], 2+Math.random()*2, 'rgba(255,255,255,0.3)');\n");
      out.write("            points[i].circle = c;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Event handling\n");
      out.write("    function addListeners() {\n");
      out.write("        if(!('ontouchstart' in window)) {\n");
      out.write("            window.addEventListener('mousemove', mouseMove);\n");
      out.write("        }\n");
      out.write("        window.addEventListener('scroll', scrollCheck);\n");
      out.write("        window.addEventListener('resize', resize);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function mouseMove(e) {\n");
      out.write("        var posx = posy = 0;\n");
      out.write("        if (e.pageX || e.pageY) {\n");
      out.write("            posx = e.pageX;\n");
      out.write("            posy = e.pageY;\n");
      out.write("        }\n");
      out.write("        else if (e.clientX || e.clientY)    {\n");
      out.write("            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n");
      out.write("            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n");
      out.write("        }\n");
      out.write("        target.x = posx;\n");
      out.write("        target.y = posy;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function scrollCheck() {\n");
      out.write("        if(document.body.scrollTop > height) animateHeader = false;\n");
      out.write("        else animateHeader = true;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function resize() {\n");
      out.write("        width = window.innerWidth;\n");
      out.write("        height = window.innerHeight;\n");
      out.write("        largeHeader.style.height = height+'px';\n");
      out.write("        canvas.width = width;\n");
      out.write("        canvas.height = height;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // animation\n");
      out.write("    function initAnimation() {\n");
      out.write("        animate();\n");
      out.write("        for(var i in points) {\n");
      out.write("            shiftPoint(points[i]);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function animate() {\n");
      out.write("        if(animateHeader) {\n");
      out.write("            ctx.clearRect(0,0,width,height);\n");
      out.write("            for(var i in points) {\n");
      out.write("                // detect points in range\n");
      out.write("                if(Math.abs(getDistance(target, points[i])) < 4000) {\n");
      out.write("                    points[i].active = 0.3;\n");
      out.write("                    points[i].circle.active = 0.6;\n");
      out.write("                } else if(Math.abs(getDistance(target, points[i])) < 20000) {\n");
      out.write("                    points[i].active = 0.1;\n");
      out.write("                    points[i].circle.active = 0.3;\n");
      out.write("                } else if(Math.abs(getDistance(target, points[i])) < 40000) {\n");
      out.write("                    points[i].active = 0.02;\n");
      out.write("                    points[i].circle.active = 0.1;\n");
      out.write("                } else {\n");
      out.write("                    points[i].active = 0;\n");
      out.write("                    points[i].circle.active = 0;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                drawLines(points[i]);\n");
      out.write("                points[i].circle.draw();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        requestAnimationFrame(animate);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function shiftPoint(p) {\n");
      out.write("        TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,\n");
      out.write("            y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,\n");
      out.write("            onComplete: function() {\n");
      out.write("                shiftPoint(p);\n");
      out.write("            }});\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Canvas manipulation\n");
      out.write("    function drawLines(p) {\n");
      out.write("        if(!p.active) return;\n");
      out.write("        for(var i in p.closest) {\n");
      out.write("            ctx.beginPath();\n");
      out.write("            ctx.moveTo(p.x, p.y);\n");
      out.write("            ctx.lineTo(p.closest[i].x, p.closest[i].y);\n");
      out.write("            ctx.strokeStyle = 'rgba(156,217,249,'+ p.active+')';\n");
      out.write("            ctx.stroke();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function Circle(pos,rad,color) {\n");
      out.write("        var _this = this;\n");
      out.write("\n");
      out.write("        // constructor\n");
      out.write("        (function() {\n");
      out.write("            _this.pos = pos || null;\n");
      out.write("            _this.radius = rad || null;\n");
      out.write("            _this.color = color || null;\n");
      out.write("        })();\n");
      out.write("\n");
      out.write("        this.draw = function() {\n");
      out.write("            if(!_this.active) return;\n");
      out.write("            ctx.beginPath();\n");
      out.write("            ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);\n");
      out.write("            ctx.fillStyle = 'rgba(156,217,249,'+ _this.active+')';\n");
      out.write("            ctx.fill();\n");
      out.write("        };\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Util\n");
      out.write("    function getDistance(p1, p2) {\n");
      out.write("        return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("})();\n");
      out.write("</script>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
